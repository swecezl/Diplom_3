{"name": "Проверка, при создании нового заказа счётчик увеличиваются", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1586, 375). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=125.0.6422.77)\nStacktrace:\n\tGetHandleVerifier [0x00B3B793+45827]\n\t(No symbol) [0x00ACDB74]\n\t(No symbol) [0x009C150F]\n\t(No symbol) [0x00A08052]\n\t(No symbol) [0x00A063D8]\n\t(No symbol) [0x00A0425B]\n\t(No symbol) [0x00A03823]\n\t(No symbol) [0x009F85EF]\n\t(No symbol) [0x00A22DFC]\n\t(No symbol) [0x009F8075]\n\t(No symbol) [0x00A23094]\n\t(No symbol) [0x00A3C034]\n\t(No symbol) [0x00A22B96]\n\t(No symbol) [0x009F6998]\n\t(No symbol) [0x009F751D]\n\tGetHandleVerifier [0x00DF43C3+2899763]\n\tGetHandleVerifier [0x00E477ED+3240797]\n\tGetHandleVerifier [0x00BC1264+593364]\n\tGetHandleVerifier [0x00BC818C+621820]\n\t(No symbol) [0x00AD6F54]\n\t(No symbol) [0x00AD3658]\n\t(No symbol) [0x00AD37F7]\n\t(No symbol) [0x00AC58AE]\n\tBaseThreadInitThunk [0x7661FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77807CBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77807C8E+238]", "trace": "self = <tests.test_orders.TestOrdersLine object at 0x000001C26D7E1E80>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7bc0d710167d9756c0d9e7397d644cae\")>, login = ['luis80@yahoo.com', 'dxsch', 'Audrey']\ningredient_1 = ('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[1]\"), ingredient_2 = ('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[7]\"), counter_orders = ('xpath', '(//p[contains(@class, \"OrderFeed_number\")])[2]')\n\n    @pytest.mark.parametrize('ingredient_1, ingredient_2, counter_orders', [\n        [MainPageLocators.BURGER_INGREDIENT_BUNS, MainPageLocators.BURGER_INGREDIENT_CUTLET,\n         MainPageLocators.COUNT_ORDERS_ALL_TIME],\n        [MainPageLocators.BURGER_INGREDIENT_BUNS, MainPageLocators.BURGER_INGREDIENT_CUTLET,\n         MainPageLocators.COUNT_ORDERS_TODAY]])\n    @allure.title('Проверка, при создании нового заказа счётчик увеличиваются')\n    def test_when_creating_new_order_counter_increases(self, driver, login, ingredient_1, ingredient_2, counter_orders):\n        main_page = MainPage(driver)\n        main_page.open(Urls.URL_SB)\n        main_page.click_on_login_in_account_button()\n        login_page = LoginPage(driver)\n        login_page.login_user(login[0], login[1])\n        main_page = MainPage(driver)\n        main_page.click_on_orders_line_button()\n        count_orders_before = main_page.get_counter_order_completed(counter_orders)\n        main_page.click_on_constructor_button()\n        main_page.drag_ingredient_to_order(ingredient_1)\n        main_page.drag_ingredient_to_order(ingredient_2)\n        main_page.click_on_checkout_button()\n>       main_page.click_on_close_button_order_pop_up_window()\n\ntests\\test_orders.py:63: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:80: in click_on_close_button_order_pop_up_window\n    self.element_is_visible(self.locators.CLOSE_BUTTON_POP_UP_WINDOW_DETAILS_ORDER).click()\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C26DA802F0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77807CBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77807C8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1586, 375). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=125.0.6422.77)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00B3B793+45827]\nE       \t(No symbol) [0x00ACDB74]\nE       \t(No symbol) [0x009C150F]\nE       \t(No symbol) [0x00A08052]\nE       \t(No symbol) [0x00A063D8]\nE       \t(No symbol) [0x00A0425B]\nE       \t(No symbol) [0x00A03823]\nE       \t(No symbol) [0x009F85EF]\nE       \t(No symbol) [0x00A22DFC]\nE       \t(No symbol) [0x009F8075]\nE       \t(No symbol) [0x00A23094]\nE       \t(No symbol) [0x00A3C034]\nE       \t(No symbol) [0x00A22B96]\nE       \t(No symbol) [0x009F6998]\nE       \t(No symbol) [0x009F751D]\nE       \tGetHandleVerifier [0x00DF43C3+2899763]\nE       \tGetHandleVerifier [0x00E477ED+3240797]\nE       \tGetHandleVerifier [0x00BC1264+593364]\nE       \tGetHandleVerifier [0x00BC818C+621820]\nE       \t(No symbol) [0x00AD6F54]\nE       \t(No symbol) [0x00AD3658]\nE       \t(No symbol) [0x00AD37F7]\nE       \t(No symbol) [0x00AC58AE]\nE       \tBaseThreadInitThunk [0x7661FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77807CBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77807C8E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Клик по кнопке \"Войти в аккаунт\"", "status": "passed", "start": 1716720655611, "stop": 1716720655800}, {"name": "Авторизоваться", "status": "passed", "parameters": [{"name": "email", "value": "'luis80@yahoo.com'"}, {"name": "password", "value": "'dxsch'"}], "start": 1716720655800, "stop": 1716720655995}, {"name": "Клик по кнопке \"Лента заказов\"", "status": "passed", "start": 1716720655995, "stop": 1716720656548}, {"name": "Получить количество текущих заказов", "status": "passed", "parameters": [{"name": "counter_locator", "value": "('xpath', '(//p[contains(@class, \"OrderFeed_number\")])[2]')"}], "start": 1716720656548, "stop": 1716720657091}, {"name": "Клик по кнопке \"Конструктор\"", "status": "passed", "start": 1716720657091, "stop": 1716720657146}, {"name": "Перетащить ингредиент в заказ", "status": "passed", "parameters": [{"name": "draggable_locator", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[1]\")"}], "start": 1716720657146, "stop": 1716720657799}, {"name": "Перетащить ингредиент в заказ", "status": "passed", "parameters": [{"name": "draggable_locator", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[7]\")"}], "start": 1716720657799, "stop": 1716720658403}, {"name": "Клик по кнопке \"Оформить заказ\"", "status": "passed", "start": 1716720658404, "stop": 1716720658459}, {"name": "Клик по кнопке \"крестик\" во всплывающем окне с \"Заказ оформлен\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"button\" class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\">...</button> is not clickable at point (1586, 375). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=125.0.6422.77)\nStacktrace:\n\tGetHandleVerifier [0x00B3B793+45827]\n\t(No symbol) [0x00ACDB74]\n\t(No symbol) [0x009C150F]\n\t(No symbol) [0x00A08052]\n\t(No symbol) [0x00A063D8]\n\t(No symbol) [0x00A0425B]\n\t(No symbol) [0x00A03823]\n\t(No symbol) [0x009F85EF]\n\t(No symbol) [0x00A22DFC]\n\t(No symbol) [0x009F8075]\n\t(No symbol) [0x00A23094]\n\t(No symbol) [0x00A3C034]\n\t(No symbol) [0x00A22B96]\n\t(No symbol) [0x009F6998]\n\t(No symbol) [0x009F751D]\n\tGetHandleVerifier [0x00DF43C3+2899763]\n\tGetHandleVerifier [0x00E477ED+3240797]\n\tGetHandleVerifier [0x00BC1264+593364]\n\tGetHandleVerifier [0x00BC818C+621820]\n\t(No symbol) [0x00AD6F54]\n\t(No symbol) [0x00AD3658]\n\t(No symbol) [0x00AD37F7]\n\t(No symbol) [0x00AC58AE]\n\tBaseThreadInitThunk [0x7661FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77807CBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77807C8E+238]\n\n", "trace": "  File \"C:\\Users\\Marty\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\Marty\\PycharmProjects\\Diplom\\Diplom_3\\pages\\main_page.py\", line 80, in click_on_close_button_order_pop_up_window\n    self.element_is_visible(self.locators.CLOSE_BUTTON_POP_UP_WINDOW_DETAILS_ORDER).click()\n  File \"C:\\Users\\Marty\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Marty\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Marty\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Marty\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1716720658459, "stop": 1716720659652}], "parameters": [{"name": "driver", "value": "'chrome'"}, {"name": "ingredient_1", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[1]\")"}, {"name": "ingredient_2", "value": "('xpath', \"(//a[contains(@class, 'BurgerIngredient_ingredient')])[7]\")"}, {"name": "counter_orders", "value": "('xpath', '(//p[contains(@class, \"OrderFeed_number\")])[2]')"}], "start": 1716720653793, "stop": 1716720659653, "uuid": "428b26fe-978a-4513-bc5e-90bcaf40ad64", "historyId": "c4b16370cd3d434949220f2afff5d18b", "testCaseId": "49af44e46d46d3ebcc7c7d4d7a1ffe49", "fullName": "tests.test_orders.TestOrdersLine#test_when_creating_new_order_counter_increases", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_orders"}, {"name": "subSuite", "value": "TestOrdersLine"}, {"name": "host", "value": "DESKTOP-BIEHISL"}, {"name": "thread", "value": "16232-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_orders"}]}